<style lang="less">
  .container {
    display: flex;
    .row {
      .fl {
        display: flex;
        flex: 1;

        image {
          display: flex;
          width: 50px;
          height: 50px;
          border-radius: 50px;
          display: block;

        }
        span {
          display: block;
        }
      }
    }

  }

</style>
<template>

  <view class="">
    <swiper indicator-dots="true" autoplay="true" interval="3000" duration="500">
      <repeat for="{{imgUrls}}" key="index" index="index" item="item">
        <swiper-item>
          <image src="{{item.picture}}" class="slide-image" width="355" height="150"/>
        </swiper-item>
      </repeat>
    </swiper>
  </view>


  <view class="weui-cells weui-cells_after-title">
    <repeat for="{{articles}}" key="index" index="index" item="item">
    <view class="weui-cell">

      <view class="weui-cell__hd">
        <image src="{{item.background}}"
               style="margin-right: 5px;vertical-align: middle;width:20px; height: 20px;"></image>
      </view>
      <view class="weui-cell__bd">{{item.title}}</view>
      <view class="weui-cell__ft">{{item.gate.data.title}}</view>
      <view class="weui-media-box__info__meta">{{item.user.data.name}}</view>
      <view class="weui-media-box__info__meta">{{item.created_at}}</view>

    </view>

    </repeat>



  </view>

</template>


<script>
  import wepy from 'wepy'
  import slide from '@/services/slide'
  import article from '@/services/article'


  export default class Index extends wepy.page {


    config = {
      "navigationBarBackgroundColor": "#ffffff",
      "navigationBarTextStyle": "black",
      "navigationBarTitleText": "微信接口功能演示",
      "backgroundColor": "#eeeeee",
      "backgroundTextStyle": "light"
    };
    data = {
      imgUrls: [],
      articles:[]
    }

    // 获取轮播图数据
    async getSlideList() {
      // 定义一个变量来接受 slide.get 方法
      let response = await slide.get()
      // console.log(response)
      //如果有取回值，进行下面绑定数据
      if (response.statusCode === 200) {
        //把新的数据进行绑定，好给上面灯片进行循环
        this.imgUrls = response.data.slides
        //赋值数据的时候，需要进行绑定
        this.$apply()

      }

    }
    // 获取文章列表
    async getArticleList() {
      let response = await article.get()
      // console.log(response)
      if (response.statusCode === 200) {
        // console.log(response)
        this.articles = response.data.data
        this.$apply()
      }
    }


    // 页面一运行就加载
    onLoad = () => {
      this.getSlideList()
      this.getArticleList()
      // util.api({url: 'categories'})
      // util.api({url: 'articles'})
      // util.login({data: {email: '15163640385', password: 'gaobin'}})
      // util.logout()
    }
  }
</script>
